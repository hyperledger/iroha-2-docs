import{_ as s,c as i,o as a,V as t}from"./chunks/framework.B6c1f-8R.js";const E=JSON.parse('{"title":"Transactions","description":"","frontmatter":{},"headers":[],"relativePath":"blockchain/transactions.md","filePath":"blockchain/transactions.md","lastUpdated":1727363525000}'),n={name:"blockchain/transactions.md"},e=t(`<h1 id="transactions" tabindex="-1">Transactions <a class="header-anchor" href="#transactions" aria-label="Permalink to &quot;Transactions&quot;">â€‹</a></h1><p>A <strong>transaction</strong> is a collection of <a href="./instructions.html">instructions</a>. The instructions within a transaction can be executed in a sequence or compiled into a <a href="./wasm.html">WASM blob</a>.</p><p>All interactions in the blockchain are done via transactions.</p><p>All transactions, including rejected transactions, are stored in blocks.</p><p>Here is an example of creating a new transaction with the <code>Grant</code> instruction. In this transaction, Mouse is granting Alice the specified role (<code>role_id</code>). Check <a href="./permissions.html#register-a-new-role">the full example</a>.</p><div class="language-rust vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">rust</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> grant_role </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> GrantBox</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">new</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(role_id, alice_id);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> grant_role_tx </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    Transaction</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">new</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(mouse_id, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">vec!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[grant_role</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">into</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()]</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">into</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100_000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sign</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(mouse_key_pair)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div>`,6),h=[e];function l(r,p,k,o,c,d){return a(),i("div",null,h)}const _=s(n,[["render",l]]);export{E as __pageData,_ as default};
