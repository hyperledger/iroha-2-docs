import{_ as s,c as a,o as i,V as t}from"./chunks/framework.B6c1f-8R.js";const e="/iroha-2-docs/assets/install-troubles.BZrv1Q7d.png",y=JSON.parse('{"title":"Troubleshooting Installation Issues","description":"","frontmatter":{},"headers":[],"relativePath":"help/installation-issues.md","filePath":"help/installation-issues.md","lastUpdated":1727363525000}'),n={name:"help/installation-issues.md"},o=t('<h1 id="troubleshooting-installation-issues" tabindex="-1">Troubleshooting Installation Issues <a class="header-anchor" href="#troubleshooting-installation-issues" aria-label="Permalink to &quot;Troubleshooting Installation Issues&quot;">​</a></h1><p>This section offers troubleshooting tips for issues with Iroha 2 installation. If the issue you are experiencing is not described here, contact us via <a href="https://t.me/hyperledgeriroha" target="_blank" rel="noreferrer">Telegram</a>.</p><h2 id="troubleshooting-rust-toolchain" tabindex="-1">Troubleshooting Rust Toolchain <a class="header-anchor" href="#troubleshooting-rust-toolchain" aria-label="Permalink to &quot;Troubleshooting Rust Toolchain&quot;">​</a></h2><p>Sometimes, things don’t go as planned. Especially if you had <code>rust</code> on your system a while ago, but didn’t upgrade. A similar problem can occur in Python: XKCD has a famous example of what that might look like:</p><div class="flex justify-center"><p><img src="'+e+`" alt="Untitled"></p></div><h3 id="check-rust-version" tabindex="-1">Check Rust version <a class="header-anchor" href="#check-rust-version" aria-label="Permalink to &quot;Check Rust version&quot;">​</a></h3><p>In the interest of preserving both your and our sanity, make sure that you have the right version of <code>cargo</code> paired with the right version of <code>rustc</code> (1.57 and 1.57) respectively. To show the versions, do</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cargo -V</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cargo </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.60</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.0 </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">d1fd9fe</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2022</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">-03-01</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>and then</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rustc --version</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rustc </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.60</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.0 </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">7737e0b5c</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2022</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">-04-04</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>If you have higher versions, you&#39;re fine. If you have lower versions, you can run the following command to update it:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rustup toolchain update stable</span></span></code></pre></div><h3 id="check-installation-location" tabindex="-1">Check installation location <a class="header-anchor" href="#check-installation-location" aria-label="Permalink to &quot;Check installation location&quot;">​</a></h3><p>If you get lower version numbers <strong>and</strong> you updated the toolchain and it didn’t work… let’s just say it’s a common problem, but it doesn’t have a common solution.</p><p>Firstly, you should establish where the version that you want to use is installed:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rustup which rustc</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rustup which cargo</span></span></code></pre></div><p>User installations of the toolchains are <em>usually</em> in <code>~/.rustup/toolchains/stable-*/bin/</code>. If that is the case, you should be able to run</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rustup toolchain update stable</span></span></code></pre></div><p>and that should fix your problems.</p><h3 id="check-the-default-rust-version" tabindex="-1">Check the default Rust version <a class="header-anchor" href="#check-the-default-rust-version" aria-label="Permalink to &quot;Check the default Rust version&quot;">​</a></h3><p>Another option is that you have the up-to-date <code>stable</code> toolchain, but it is not set as the default. Run:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rustup default stable</span></span></code></pre></div><p>This can happen if you installed a <code>nightly</code> version, or set a specific Rust version, but forgot to un-set it.</p><h3 id="check-if-there-are-other-rust-versions" tabindex="-1">Check if there are other Rust versions <a class="header-anchor" href="#check-if-there-are-other-rust-versions" aria-label="Permalink to &quot;Check if there are other Rust versions&quot;">​</a></h3><p>Continuing down the troubleshooting rabbit-hole, we could have shell aliases:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> type rustc</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> type cargo</span></span></code></pre></div><p>If these point to locations other than the one you saw when running <code>rustup which *</code>, then you have a problem. Note that it’s not enough to just</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> alias rustc &quot;~/.rustup/toolchains/stable-*/bin/rustc&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> alias cargo &quot;~/.rustup/toolchains/stable-*/bin/cargo&quot;</span></span></code></pre></div><p>because there is an internal logic that could break, regardless of how you re-arrange your shell aliases.</p><p>The simplest solution would be to remove the versions that you don’t use.</p><p>It’s easier <em>said</em> than <em>done</em>, however, since it entails tracking all the versions of rustup installed and available to you. Usually, there are only two: the system package manager version and the one that got installed into the standard location in your home folder when you ran the command in the beginning of this tutorial. For the former, consult your (Linux) distribution’s manual, (<code>apt remove rust</code>). For the latter, run:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rustup toolchain list</span></span></code></pre></div><p>And then, for every <code>&lt;toolchain&gt;</code> (without the angle brackets of course):</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rustup remove </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">toolchai</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">n</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><p>After that, make sure that</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cargo --help</span></span></code></pre></div><p>results in a command-not-found error, i.e. that you have no active Rust toolchain installed. Then, run:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rustup toolchain install stable</span></span></code></pre></div><h2 id="troubleshooting-python-toolchain" tabindex="-1">Troubleshooting Python toolchain <a class="header-anchor" href="#troubleshooting-python-toolchain" aria-label="Permalink to &quot;Troubleshooting Python toolchain&quot;">​</a></h2><p>When you install the Python Wheel package using pip on the &quot;<a href="/iroha-2-docs/guide/tutorials/python.html#_1-iroha-2-client-setup">client setup</a>&quot; step, you may encounter an error like: &quot;iroha_python-*.whl is not a supported wheel on this platform&quot;.</p><p>This error means that pip is outdated, so you need to update it. First of all, it is recommended to check your OS for updates and perform a system upgrade.</p><p>If this doesn&#39;t work, you can try updating <code>pip</code> for your user directory.</p><p><code>python -m pip install --upgrade pip</code></p><p>Make sure that <code>pip</code> that is installed in your home directory. To do this, run <code>whereis pip</code> and check if <code>/home/username/.local/bin/pip</code> is among the paths. If not, update your shell&#39;s <code>PATH</code> variable.</p><p>If the issue persists, please <a href="/iroha-2-docs/help/">contact us</a> and report the outputs.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>python --version</span></span>
<span class="line"><span>python3 --version</span></span>
<span class="line"><span>pip --version</span></span>
<span class="line"><span>pip3 --version</span></span></code></pre></div>`,46),h=[o];function l(p,r,c,d,u,k){return i(),a("div",null,h)}const b=s(n,[["render",l]]);export{y as __pageData,b as default};
