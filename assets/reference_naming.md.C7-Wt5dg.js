import{_ as e,c as o,o as n,V as a}from"./chunks/framework.B6c1f-8R.js";const h=JSON.parse('{"title":"Naming Conventions","description":"","frontmatter":{},"headers":[],"relativePath":"reference/naming.md","filePath":"reference/naming.md","lastUpdated":1727363525000}'),c={name:"reference/naming.md"},t=a('<h1 id="naming-conventions" tabindex="-1">Naming Conventions <a class="header-anchor" href="#naming-conventions" aria-label="Permalink to &quot;Naming Conventions&quot;">â€‹</a></h1><p>When you are naming accounts, domains, or assets, you have to keep in mind the following conventions used in Iroha 2:</p><ol><li><p>There is a number of reserved characters that are used for specific types of constructs:</p><ul><li><code>@</code> is reserved for <code>account@domain</code> constructs</li><li><code>#</code> is reserved for <code>asset#domain</code> constructs</li><li><code>$</code> is reserved for <code>trigger$domain</code> constructs</li><li><code>%</code> is reserved for <code>validator%account</code> constructs</li></ul></li><li><p>The maximum number of characters (including UTF-8 characters) a name can have is limited by two factors: <code>[0, u32::MAX]</code> and the currently allocated stack space.</p></li></ol>',3),r=[t];function i(s,d,l,m,u,_){return n(),o("div",null,r)}const p=e(c,[["render",i]]);export{h as __pageData,p as default};
