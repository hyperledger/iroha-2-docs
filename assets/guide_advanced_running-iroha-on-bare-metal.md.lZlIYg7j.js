import{_ as s,c as i,o as a,V as e}from"./chunks/framework.B6c1f-8R.js";const n="/iroha-2-docs/assets/appendix_running-iroha_cli-output.CtJXTWW9.png",E=JSON.parse('{"title":"Iroha on bare metal","description":"","frontmatter":{},"headers":[],"relativePath":"guide/advanced/running-iroha-on-bare-metal.md","filePath":"guide/advanced/running-iroha-on-bare-metal.md","lastUpdated":1727363525000}'),t={name:"guide/advanced/running-iroha-on-bare-metal.md"},l=e(`<h1 id="iroha-on-bare-metal" tabindex="-1">Iroha on bare metal <a class="header-anchor" href="#iroha-on-bare-metal" aria-label="Permalink to &quot;Iroha on bare metal&quot;">​</a></h1><p>What we are going to do is replicate the setup that we have in <code>docker compose</code> and run Iroha directly, without going through the intermediary of containers. Running Iroha on bare metal involves manipulating files and/or environment variables.</p><p>The file-based approach is the easiest to get right. Using environment variables can offer a better user experience if done right, but is more error-prone, particularly for exotic systems (Windows).</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>For this chapter, we assume you have learned about <a href="/iroha-2-docs/guide/configure/sample-configuration.html">configuration</a> and <a href="/iroha-2-docs/guide/configure/peer-management.html">management</a> in Iroha 2. Here we offer you instructions to run Iroha on bare metal without going into details about various configuration options available.</p><p>You can always check <a href="/iroha-2-docs/guide/configure/sample-configuration.html">sample configuration files</a> for <code>configs/peer/genesis.json</code> and <code>configs/peer/config.json</code>, or refer to <a href="/iroha-2-docs/guide/configure/peer-configuration.html">peer configuration options</a> for more details.</p></div><h2 id="prerequisites" tabindex="-1">Prerequisites <a class="header-anchor" href="#prerequisites" aria-label="Permalink to &quot;Prerequisites&quot;">​</a></h2><p>First of all, we should note that we have only built the Iroha client so far in this tutorial. We also need to build the peer software to run Iroha on bare metal.</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>Building in <code>debug</code> mode retains much more information and optimises the binary to a far lesser extent. As such, we advise you to build Iroha in <code>debug</code> mode for testing: it’s faster and it makes it easier for you to find issues and fix them. However, if you intend to actually deploy Iroha, you should build it in <code>--release</code> mode.</p></div><ul><li><p>To build the peer software in <code>debug</code> mode, run:</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">cargo build </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">p iroha</span></span></code></pre></div></li><li><p>To build the peer software in <code>release</code> mode, run:</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">cargo build </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">--</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">bin iroha </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">--</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">release</span></span></code></pre></div><p>The <code>release</code> mode binary takes significantly longer to compile than <code>debug</code> mode, but the result is a smaller and faster binary, suitable for deployment in the actual blockchains.</p></li></ul><h2 id="setup" tabindex="-1">Setup <a class="header-anchor" href="#setup" aria-label="Permalink to &quot;Setup&quot;">​</a></h2><h3 id="setup-environment-variables" tabindex="-1">Setup: Environment variables <a class="header-anchor" href="#setup-environment-variables" aria-label="Permalink to &quot;Setup: Environment variables&quot;">​</a></h3><p>We want to make sure that we have the right configuration.</p><p>There are different ways to do this. You can copy the contents of the <code>~/Git/iroha/configs/peer/</code> into a new directory, or, alternatively, just run all commands from that directory:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cd ~/Git/iroha/configs/peer</span></span></code></pre></div><p>The third option is to specify the full path to the configuration file in an environment variable. For simplicity, we shall do the latter:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cd ~</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> export IROHA2_GENESIS_PATH=&quot;$(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">pwd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">)/Git/iroha/configs/peer/genesis.json&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> export IROHA2_CONFIG_PATH=&quot;$(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">pwd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">)/Git/iroha/configs/peer/config.json&quot;</span></span></code></pre></div><p>For extra convenience, you could add the Iroha 2 <code>target</code> directory to your <code>PATH</code>. This means that instead of having to specify the full path to the executable <code>iroha</code>, you can instead type <code>iroha</code> directly into your command line.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> export PATH=&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$PATH</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">:$(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">pwd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">)/Git/iroha/target/debug&quot;</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Don’t forget to replace <code>debug</code> with <code>release</code> when you’re ready to deploy in the real world.</p></div><p>This way you can run <code>iroha</code> from any directory without having to worry about configuration paths and/or specifying the full path to the Iroha executable.</p><p>It is a good idea to make these instructions permanent, which you can do by adding the environment variables to your startup shell.</p><details class="details custom-block"><summary>Save the instructions to the startup shell</summary><p>On older Linux systems, you copy and paste the instructions (without the <code>cd ~</code>) to <code>~/.bashrc</code>. On Mac OS X 10.6 and later, as well as some Linux systems, you want to add the same lines to <code>~/.zshrc</code>.</p><p>Copy these instructions to the specified files (replace <code>debug</code> with <code>release</code> when you are ready to deploy):</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> export IROHA2_GENESIS_PATH=&quot;$(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">pwd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">)/Git/iroha/configs/peer/genesis.json&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> export IROHA2_CONFIG_PATH=&quot;$(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">pwd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">)/Git/iroha/configs/peer/config.json&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> export PATH=&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$PATH</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">:$(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">pwd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">)/Git/iroha/target/debug&quot;</span></span></code></pre></div></details><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>This process is almost universally unreliable and messy, and it is likely that your system is special in that it breaks some of our assumptions.</p><p>If the above optional steps didn’t work for you, you can keep working in the <code>~/Git/iroha/configs/peer/</code> folder, and run Iroha via <code>~/Git/iroha/target/debug/iroha</code>.</p><p>This makes the command-line a little harder to read, which is why we recommend setting up your environment first.</p></div><div class="info custom-block"><p class="custom-block-title">Note</p><p>The tutorial assumes that you’re running either Linux, Mac OS X, or Windows using WSL. It should be possible to run directly on Windows, but that is neither recommended nor easy. If you don’t want to use a Unix-like system, we suggest that you wait until we publish a detailed guide for Windows users.</p></div><h3 id="setup-files" tabindex="-1">Setup: Files <a class="header-anchor" href="#setup-files" aria-label="Permalink to &quot;Setup: Files&quot;">​</a></h3><p>This is the recommended method of bringing up an Iroha peer. What we do is:</p><ol><li><p>Create a new directory for the configuration files:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mkdir -p ~/Git/iroha/deploy</span></span></code></pre></div></li><li><p>Copy the <code>peer</code> configuration into it:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cp -vfr ~/Git/iroha/configs/peer/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.json ~/Git/iroha/deploy</span></span></code></pre></div></li><li><p>Copy the respective Iroha binary into your binary folder:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sudo cp -vfr ~/Git/iroha/target/debug/iroha /usr/bin/</span></span></code></pre></div><p>which will install Iroha 2 system wide.</p></li></ol><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>You could also use the iroha peer binary locally by copying it into the same folder. The only difference would be that you’d be calling Iroha like so: <code>./iroha</code> instead of <code>iroha</code>.</p></div><h2 id="first-run-of-iroha-on-bare-metal" tabindex="-1">First run of Iroha on bare metal <a class="header-anchor" href="#first-run-of-iroha-on-bare-metal" aria-label="Permalink to &quot;First run of Iroha on bare metal&quot;">​</a></h2><p>If you’ve done everything correctly, you can now do</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> iroha</span></span></code></pre></div><p>to start your first peer and be greeted with</p><p><img src="`+n+`" alt="Untitled"></p><p>This means that everything is working, but also that we need to do some more work.</p><p>You have just started a single peer, which can tolerate exactly 0 faults. Running two peers is also possible, but again, can tolerate 0 faults. You must run at least 4 peers in order to have the capacity to tolerate at least one fault.</p><p>In general, if you want to be resistant to <code>f</code> faults, you want to have <code>3f+1</code> peers: (<code>4</code>, <code>7</code>, <code>10</code>, etc.).</p><p>You cannot really start the peers in any way you want, though. When we started our original peer, in its configuration, we specified that it has to trust very specific peers, which have the given private key and listen on a specific address. In order to know how to run them appropriately, take a look at <code>docker-compose.yml</code>:</p><details class="details custom-block"><summary>docker-compose.yaml</summary><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">version</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;3.8&#39;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">services</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  iroha0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    image</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">hyperledger/iroha2:dev</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    environment</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      TORII_P2P_ADDR</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">iroha0:1337</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      TORII_API_URL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">iroha0:8080</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      TORII_TELEMETRY_URL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">iroha0:8180</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      IROHA_PUBLIC_KEY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;ed01201c61faf8fe94e253b93114240394f79a607b7fa55f9e5a41ebec74b88055768b&#39;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      IROHA_PRIVATE_KEY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &#39;{&quot;digest_function&quot;: &quot;ed25519&quot;, &quot;payload&quot;:</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;282ed9f3cf92811c3818dbc4ae594ed59dc1a2f78e4241e31924e101d6b1fb831c61faf8fe94e253b93114240394f79a607b7fa55f9e5a41ebec74b88055768b&quot;}&#39;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      SUMERAGI_TRUSTED_PEERS</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &#39;[{&quot;address&quot;:&quot;iroha0:1337&quot;, &quot;public_key&quot;:</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;ed01201c61faf8fe94e253b93114240394f79a607b7fa55f9e5a41ebec74b88055768b&quot;},</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        {&quot;address&quot;:&quot;iroha1:1338&quot;, &quot;public_key&quot;:</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;ed0120cc25624d62896d3a0bfd8940f928dc2abf27cc57cefeb442aa96d9081aae58a1&quot;},</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        {&quot;address&quot;: &quot;iroha2:1339&quot;, &quot;public_key&quot;:</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;ed0120faca9e8aa83225cb4d16d67f27dd4f93fc30ffa11adc1f5c88fd5495ecc91020&quot;},</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        {&quot;address&quot;: &quot;iroha3:1340&quot;, &quot;public_key&quot;:</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;ed01208e351a70b6a603ed285d666b8d689b680865913ba03ce29fb7d13a166c4e7f1f&quot;}]&#39;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      IROHA_GENESIS_ACCOUNT_PUBLIC_KEY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;ed01203f4e3e98571b55514edc5ccf7e53ca7509d89b2868e62921180a6f57c2f4e255&#39;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      IROHA_GENESIS_ACCOUNT_PRIVATE_KEY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &#39;{ &quot;digest_function&quot;: &quot;ed25519&quot;, &quot;payload&quot;:</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;038ae16b219da35aa036335ed0a43c28a2cc737150112c78a7b8034b9d99c9023f4e3e98571b55514edc5ccf7e53ca7509d89b2868e62921180a6f57c2f4e255&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        }&#39;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    ports</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;1337:1337&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;8080:8080&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;8180:8180&#39;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    volumes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;./configs/peer:/config&#39;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    init</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    command</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">iroha --submit-genesis</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  iroha1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    image</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">hyperledger/iroha2:dev</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    environment</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      TORII_P2P_ADDR</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">iroha1:1338</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      TORII_API_URL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">iroha1:8081</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      TORII_TELEMETRY_URL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">iroha1:8181</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      IROHA_PUBLIC_KEY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;ed0120cc25624d62896d3a0bfd8940f928dc2abf27cc57cefeb442aa96d9081aae58a1&#39;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      IROHA_PRIVATE_KEY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &#39;{&quot;digest_function&quot;: &quot;ed25519&quot;, &quot;payload&quot;:</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;3bac34cda9e3763fa069c1198312d1ec73b53023b8180c822ac355435edc4a24cc25624d62896d3a0bfd8940f928dc2abf27cc57cefeb442aa96d9081aae58a1&quot;}&#39;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      SUMERAGI_TRUSTED_PEERS</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &#39;[{&quot;address&quot;:&quot;iroha0:1337&quot;, &quot;public_key&quot;:</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;ed01201c61faf8fe94e253b93114240394f79a607b7fa55f9e5a41ebec74b88055768b&quot;},</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        {&quot;address&quot;:&quot;iroha1:1338&quot;, &quot;public_key&quot;:</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;ed0120cc25624d62896d3a0bfd8940f928dc2abf27cc57cefeb442aa96d9081aae58a1&quot;},</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        {&quot;address&quot;: &quot;iroha2:1339&quot;, &quot;public_key&quot;:</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;ed0120faca9e8aa83225cb4d16d67f27dd4f93fc30ffa11adc1f5c88fd5495ecc91020&quot;},</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        {&quot;address&quot;: &quot;iroha3:1340&quot;, &quot;public_key&quot;:</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;ed01208e351a70b6a603ed285d666b8d689b680865913ba03ce29fb7d13a166c4e7f1f&quot;}]&#39;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      IROHA_GENESIS_ACCOUNT_PUBLIC_KEY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;ed01203f4e3e98571b55514edc5ccf7e53ca7509d89b2868e62921180a6f57c2f4e255&#39;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    ports</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;1338:1338&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;8081:8081&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;8181:8181&#39;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    volumes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;./configs/peer:/config&#39;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    init</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  iroha2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    image</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">hyperledger/iroha2:dev</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    environment</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      TORII_P2P_ADDR</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">iroha2:1339</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      TORII_API_URL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">iroha2:8082</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      TORII_TELEMETRY_URL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">iroha2:8182</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      IROHA_PUBLIC_KEY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;ed0120faca9e8aa83225cb4d16d67f27dd4f93fc30ffa11adc1f5c88fd5495ecc91020&#39;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      IROHA_PRIVATE_KEY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &#39;{&quot;digest_function&quot;: &quot;ed25519&quot;, &quot;payload&quot;:</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;1261a436d36779223d7d6cf20e8b644510e488e6a50bafd77a7485264d27197dfaca9e8aa83225cb4d16d67f27dd4f93fc30ffa11adc1f5c88fd5495ecc91020&quot;}&#39;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      SUMERAGI_TRUSTED_PEERS</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &#39;[{&quot;address&quot;:&quot;iroha0:1337&quot;, &quot;public_key&quot;:</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;ed01201c61faf8fe94e253b93114240394f79a607b7fa55f9e5a41ebec74b88055768b&quot;},</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        {&quot;address&quot;:&quot;iroha1:1338&quot;, &quot;public_key&quot;:</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;ed0120cc25624d62896d3a0bfd8940f928dc2abf27cc57cefeb442aa96d9081aae58a1&quot;},</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        {&quot;address&quot;: &quot;iroha2:1339&quot;, &quot;public_key&quot;:</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;ed0120faca9e8aa83225cb4d16d67f27dd4f93fc30ffa11adc1f5c88fd5495ecc91020&quot;},</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        {&quot;address&quot;: &quot;iroha3:1340&quot;, &quot;public_key&quot;:</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;ed01208e351a70b6a603ed285d666b8d689b680865913ba03ce29fb7d13a166c4e7f1f&quot;}]&#39;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      IROHA_GENESIS_ACCOUNT_PUBLIC_KEY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;ed01203f4e3e98571b55514edc5ccf7e53ca7509d89b2868e62921180a6f57c2f4e255&#39;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    ports</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;1339:1339&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;8082:8082&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;8182:8182&#39;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    volumes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;./configs/peer:/config&#39;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    init</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  iroha3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    image</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">hyperledger/iroha2:dev</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    environment</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      TORII_P2P_ADDR</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">iroha3:1340</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      TORII_API_URL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">iroha3:8083</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      TORII_TELEMETRY_URL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">iroha3:8183</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      IROHA_PUBLIC_KEY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;ed01208e351a70b6a603ed285d666b8d689b680865913ba03ce29fb7d13a166c4e7f1f&#39;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      IROHA_PRIVATE_KEY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &#39;{&quot;digest_function&quot;: &quot;ed25519&quot;, &quot;payload&quot;:</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;a70dab95c7482eb9f159111b65947e482108cfe67df877bd8d3b9441a781c7c98e351a70b6a603ed285d666b8d689b680865913ba03ce29fb7d13a166c4e7f1f&quot;}&#39;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      SUMERAGI_TRUSTED_PEERS</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &#39;[{&quot;address&quot;:&quot;iroha0:1337&quot;, &quot;public_key&quot;:</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;ed01201c61faf8fe94e253b93114240394f79a607b7fa55f9e5a41ebec74b88055768b&quot;},</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        {&quot;address&quot;:&quot;iroha1:1338&quot;, &quot;public_key&quot;:</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;ed0120cc25624d62896d3a0bfd8940f928dc2abf27cc57cefeb442aa96d9081aae58a1&quot;},</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        {&quot;address&quot;: &quot;iroha2:1339&quot;, &quot;public_key&quot;:</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;ed0120faca9e8aa83225cb4d16d67f27dd4f93fc30ffa11adc1f5c88fd5495ecc91020&quot;},</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        {&quot;address&quot;: &quot;iroha3:1340&quot;, &quot;public_key&quot;:</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;ed01208e351a70b6a603ed285d666b8d689b680865913ba03ce29fb7d13a166c4e7f1f&quot;}]&#39;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      IROHA_GENESIS_ACCOUNT_PUBLIC_KEY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;ed01203f4e3e98571b55514edc5ccf7e53ca7509d89b2868e62921180a6f57c2f4e255&#39;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    ports</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;1340:1340&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;8083:8083&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;8183:8183&#39;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    volumes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;./configs/peer:/config&#39;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    init</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span></code></pre></div></details><p>For every peer, the <code>environment</code> section is a set of things that you should put in front of the <code>iroha</code> command, replacing colons with equals signs. All the socket addresses are also given internal to the docker network, so we should replace them with <code>[localhost](http://localhost)</code>, which is <code>127.0.0.1</code> on most machines.</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Each Iroha instance is going to listen on three ports: the Peer-to-peer communications channel (<code>133X</code>), the API url, where most client requests are posted (<code>808X</code>), and finally, a telemetry endpoint <code>818X</code>. All three ports need to be adjusted so there are no collisions. See the <code>docker-compose.yml</code> for an example, and adjust as needed.</p></div><h2 id="deploy-a-minimal-bft-network" tabindex="-1">Deploy a minimal BFT network <a class="header-anchor" href="#deploy-a-minimal-bft-network" aria-label="Permalink to &quot;Deploy a minimal BFT network&quot;">​</a></h2><p>Both of the following approaches could be messy and error-prone, which is why the <a href="/iroha-2-docs/get-started/launch-iroha-2.html">Launch Iroha 2</a> tutorial suggests using the <code>docker compose</code> command. However, this brings you closer to the experience of actually maintaining a functional Iroha peer.</p><h3 id="using-environment-variables" tabindex="-1">Using Environment Variables <a class="header-anchor" href="#using-environment-variables" aria-label="Permalink to &quot;Using Environment Variables&quot;">​</a></h3><p>To run the First peer, we need to write</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> TORII_P2P_ADDR=&quot;127.0.0.1:1337&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> TORII_API_URL=&quot;127.0.0.1:8080&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> TORII_STATUS_URL=&quot;127.0.0.1:8180&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> IROHA_PUBLIC_KEY=&quot;ed01207233bfc89dcbd68c19fde6ce6158225298ec1131b6a130d1aeb454c1ab5183c0&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> IROHA_PRIVATE_KEY=&#39;{&quot;digest_function&quot;: &quot;ed25519&quot;, &quot;payload&quot;: &quot;9ac47abf59b356e0bd7dcbbbb4dec080e302156a48ca907e47cb6aea1d32719e7233bfc89dcbd68c19fde6ce6158225298ec1131b6a130d1aeb454c1ab5183c0&quot;}&#39;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> iroha --submit</span></span></code></pre></div><p>and three other similar lines of bash code for the remaining deployments.</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>To copy and paste into the terminal on Linux systems, you should remember that <code>Control + Shift + V</code> is the appropriate <code>paste</code> shortcut.</p></div><p>Also note that we asked this peer to <code>--submit</code> or <code>--submit-genesis</code>. This means that in the initial network topology, this peer is the <a href="/iroha-2-docs/reference/glossary.html#leader">leader</a>. At least one peer (usually the first) needs to be the leader in the initial topology.</p><p>Now you should do the same for the other four peers. Be mindful not to mix up which address goes where, replace <code>irohaX</code> with <code>127.0.0.1</code> in the addresses, and make sure that they correspond to the right public key.</p><h3 id="using-files" tabindex="-1">Using Files <a class="header-anchor" href="#using-files" aria-label="Permalink to &quot;Using Files&quot;">​</a></h3><p>Our first peer can run off of the original configuration file. What we should do is create three more similar files and move them to three different folders e.g. <code>peer1</code>, <code>peer2</code>.</p><p>What you need to do is change the <code>TORII:P2P_ADDR</code>, <code>TORII:API_URL</code><code>TORII:STATUS_URL</code> and the <code>PUBLIC_KEY</code> configuration options to align with their <code>docker-compose.yml</code> counterparts.</p><p>Be mindful not to mix up which address goes where, replace <code>irohaX</code> with <code>127.0.0.1</code> in the addresses, and make sure that they correspond to the right public key.</p><p>Then, in each of the new folders (with the exception of <code>peer0</code>) run:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> iroha</span></span></code></pre></div><p>In the first folder <code>peer0</code> you should run:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> iroha --submit-genesis</span></span></code></pre></div><p>We effectively asked this peer to <code>--submit</code> or <code>--submit-genesis</code> in the initial, or <em>bootstrap</em>, network. This means that in the initial network topology, this peer is the <a href="/iroha-2-docs/reference/glossary.html#leader">leader</a>.</p><div class="info custom-block"><p class="custom-block-title">Note</p><p>Only the leader of the genesis network needs to have access to <code>configs/peer/genesis.json</code>. Having the same genesis in the initial folders of the other peers could be useful, since future versions of <code>iroha</code> will also sanity-check the genesis blocks.</p></div><p>If all went well, you should be greeted with nice logs on each of the nodes, and the nodes should commit the blocks to the <code>blocks/</code> directory.</p><h2 id="real-world-deployment" tabindex="-1">Real-world deployment <a class="header-anchor" href="#real-world-deployment" aria-label="Permalink to &quot;Real-world deployment&quot;">​</a></h2><p>Suppose now, that you have done all of the tinkering and want to deploy Iroha in the real world.</p><ol><li><p>Build Iroha in release mode:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cargo build --release</span></span></code></pre></div></li><li><p>Generate a key pair for your peer and take note of that key:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cargo run --bin iroha_crypto_cli</span></span></code></pre></div></li><li><p>Register your peer to a network, and make sure to add at least four of the peers on that network to the <a href="/iroha-2-docs/guide/configure/peer-configuration.html#trusted-peers"><code>TRUSTED_PEERS</code></a> array in your configuration file.</p></li><li><p>Determine the web socket that the other peers will use to connect to you. Make sure that the port is open and use that address (<a href="/iroha-2-docs/guide/configure/peer-configuration.html#p2p-addr"><code>P2P_ADDR</code></a>) in your <code>configs/peer/config.json</code> file.</p></li><li><p>After you have finished editing the configuration file, deploy Iroha by running</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/Git/iroha/target/release/iroha</span></span></code></pre></div></li></ol><div class="info custom-block"><p class="custom-block-title">Note</p><p>There is no need to pass the <code>--submit</code> flag unless you are starting the initial peer on the network.</p></div>`,63),h=[l];function p(o,d,r,k,c,u){return a(),i("div",null,h)}const y=s(t,[["render",p]]);export{E as __pageData,y as default};
